{"version":3,"file":"app.min.js","sources":["../node_modules/stage0/index.js","../node_modules/stage0/keyed.js","../app.js"],"sourcesContent":["\nconst nativeToSyntheticEvent = (event, name) => {\n    const eventKey = `__${name}`\n    let dom = event.target\n    while(dom !== null) {\n        const eventHandler = dom[eventKey]\n        if (eventHandler) {\n            eventHandler()\n            return\n        }\n        dom = dom.parentNode\n    }\n}\nconst CONFIGURED_SYNTHETIC_EVENTS = {}\nexport function setupSyntheticEvent(name) {\n    if (CONFIGURED_SYNTHETIC_EVENTS[name]) return\n    document.addEventListener(name, event => nativeToSyntheticEvent(event, name))\n    CONFIGURED_SYNTHETIC_EVENTS[name] = true\n}\n\nfunction collector(node) {\n  if (node.nodeType !== 3) {\n    if (node.attributes !== undefined) {\n      for(let attr of node.attributes) {\n        let aname = attr.name\n        if (aname[0] === '#') {\n          node.removeAttribute(aname)\n          return aname.slice(1)\n        }\n      }\n    }\n    return 0\n  } else {\n    let nodeData = node.nodeValue\n    if (nodeData[0] === '#') {\n      node.nodeValue = \"\"\n      return nodeData.slice(1)\n    }\n    return 0\n  }\n}\n\nfunction walker(node) {\n  let skip = false, tmp, pathId = '', prevPathId, pahtIdLen, code1, code2, ref\n  code1 = code2 = ''\n  if (ref = collector(node)) code2 += `refs.${ref} = node;\\n` \n  do {\n      if (!skip && (tmp = node.firstChild)) {\n          skip = false       \n\n          prevPathId = pathId\n          pathId += '_f'\n          code1 += `let ${pathId} = ${prevPathId || 'node'}.firstChild;\\n` \n\n          if (ref = collector(tmp)) code2 += `refs.${ref} = ${pathId};\\n` \n      } else if (tmp = node.nextSibling) {\n          skip = false\n\n          prevPathId = pathId\n          pathId += '_n'\n          code1 += `let ${pathId} = ${prevPathId || 'node'}.nextSibling;\\n` \n\n          if (ref = collector(tmp)) code2 += `refs.${ref} = ${pathId};\\n` \n      } else {\n          pahtIdLen = pathId.length\n          if (pathId[pahtIdLen - 1] === 'n') {\n              pathId = pathId.slice(0, pathId.lastIndexOf('_f_n'))\n          } else {\n             pathId = pathId.slice(0, pahtIdLen- 2) \n          }\n          tmp = node.parentNode\n          skip = true\n      }\n      node = tmp\n  } while (node)\n  return Function('node', code1 + 'let refs = {};\\n' + code2 + 'return refs;\\n')\n}\n\nconst compilerTemplate = document.createElement('template')\nexport function h(strings) {\n  const template = strings[0].replace(/\\n*/g, '').replace(/\\s*</g, '<').replace(/>\\s*/g, '>')\n  compilerTemplate.innerHTML = template\n  const content = compilerTemplate.content.firstChild\n  content.collect = walker(content)\n  return content\n}\nexport default h\n","\n// This is almost straightforward implementation of reconcillation algorithm\n// based on ivi documentation:\n// https://github.com/localvoid/ivi/blob/2c81ead934b9128e092cc2a5ef2d3cabc73cb5dd/packages/ivi/src/vdom/implementation.ts#L1366\n// With some fast paths from Surplus implementation:\n// https://github.com/adamhaile/surplus/blob/master/src/runtime/content.ts#L86\n//\n// How this implementation differs from others, is that it's working with data directly,\n// without maintaining nodes arrays, and uses dom props firstChild/lastChild/nextSibling\n// for markers moving.\nexport function keyed(key, parent, renderedValues, data, createFn, noOp, beforeNode) {\n    // Fast path for clear\n    if (data.length === 0) {\n        parent.textContent = \"\"\n        return\n    }\n\n    // Fast path for create\n    if (renderedValues.length === 0) {\n        let node\n        for(let i = 0, len = data.length; i < len; i++) {\n            node = createFn(data[i])\n            parent.appendChild(node)\n        }\n        return\n    }\n\n    let prevStart = 0,\n        newStart = 0,\n        loop = true,\n        prevEnd = renderedValues.length-1, newEnd = data.length-1,\n        a, b,\n        prevStartNode = beforeNode ? beforeNode.nextSibling : parent.firstChild,\n        newStartNode = prevStartNode,\n        prevEndNode = parent.lastChild,\n        newEndNode = prevEndNode,\n        afterNode\n    \n    fixes: while(loop) {\n        loop = false\n        let _node\n\n        // Skip prefix\n        a = renderedValues[prevStart], b = data[newStart]\n        while(a[key] === b[key]) {\n            noOp(prevStartNode, b)\n            prevStart++\n            newStart++\n            newStartNode = prevStartNode = prevStartNode.nextSibling\n            if (prevEnd < prevStart || newEnd < newStart) break fixes\n            a = renderedValues[prevStart]\n            b = data[newStart]\n        }\n\n        // Skip suffix\n        a = renderedValues[prevEnd], b = data[newEnd]\n        while(a[key] === b[key]) {\n            noOp(prevEndNode, b)\n            prevEnd--\n            newEnd--\n            afterNode = prevEndNode\n            newEndNode = prevEndNode = prevEndNode.previousSibling\n            if (prevEnd < prevStart || newEnd < newStart) break fixes\n            a = renderedValues[prevEnd]\n            b = data[newEnd]\n        }\n\n        // Fast path to swap backward\n        a = renderedValues[prevEnd], b = data[newStart]\n        while(a[key] === b[key]) {\n            loop = true\n            noOp(prevEndNode, b)\n            _node = prevEndNode.previousSibling\n            parent.insertBefore(prevEndNode, newStartNode)\n            newEndNode = prevEndNode = _node\n            newStart++\n            prevEnd--\n            if (prevEnd < prevStart || newEnd < newStart) break fixes\n            a = renderedValues[prevEnd]\n            b = data[newStart]\n        }\n\n        // Fast path to swap forward\n        a = renderedValues[prevStart], b = data[newEnd]\n        while(a[key] === b[key]) {\n            loop = true\n            noOp(prevStartNode, b)\n            _node = prevStartNode.nextSibling\n            parent.insertBefore(prevStartNode, afterNode)\n            prevStart++\n            afterNode = newEndNode = prevStartNode\n            prevStartNode = _node\n            newEnd--\n            if (prevEnd < prevStart || newEnd < newStart) break fixes\n            a = renderedValues[prevStart]\n            b = data[newEnd]\n        }\n    }\n\n    // Fast path for shrink\n    if (newEnd < newStart) {\n        if (prevStart <= prevEnd) {\n            let next\n            while(prevStart <= prevEnd) {\n                if (prevEnd === 0) {\n                    parent.removeChild(prevEndNode)\n                } else {\n                    next = prevEndNode.previousSibling    \n                    parent.removeChild(prevEndNode)\n                    prevEndNode = next\n                }\n                prevEnd--\n            }\n        }\n        return\n    }\n\n    // Fast path for add\n    if (prevEnd < prevStart) {\n        if (newStart <= newEnd) {\n            let node, mode = afterNode ? 1 : 0\n            while(newStart <= newEnd) {\n                node = createFn(data[newStart])\n                mode ? parent.insertBefore(node, afterNode) : parent.appendChild(node)\n                newStart++\n            }\n        }\n        return\n    }\n\n    // Positions for reusing nodes from current DOM state\n    const P = new Array(newEnd + 1 - newStart)\n    for(let i = newStart; i <= newEnd; i++) P[i] = -1\n\n    // Index to resolve position from current to new\n    const I = new Map()\n    for(let i = newStart; i <= newEnd; i++) I.set(data[i][key], i)\n\n    let reusingNodes = 0, toRemove = []\n    for(let i = prevStart; i <= prevEnd; i++) {\n        if (I.has(renderedValues[i][key])) {\n            P[I.get(renderedValues[i][key])] = i\n            reusingNodes++\n        } else {\n            toRemove.push(i)\n        }\n    }\n\n    // Fast path for full replace\n    if (reusingNodes === 0) {\n        if (beforeNode) {\n            let node = beforeNode.nextSibling, tmp\n            while(prevStart <= prevEnd) {\n                tmp = node.nextSibling\n                parent.removeChild(node)\n                node = tmp\n                prevStart++\n            }\n        } else {\n            parent.textContent = \"\"\n        }\n        let node\n        for(let i = newStart; i <= newEnd; i++) {\n            node = createFn(data[i])\n            parent.appendChild(node)\n        }\n\n        return\n    }\n\n    // What else?\n    const longestSeq = longestPositiveIncreasingSubsequence(P, newStart)\n\n    // Collect nodes to work with them\n    const nodes = []\n    let tmpC = prevStartNode\n    for(let i = prevStart; i <= prevEnd; i++) {\n        nodes[i] = tmpC\n        tmpC = tmpC.nextSibling\n    }\n\n    for(let i = 0; i < toRemove.length; i++) parent.removeChild(nodes[toRemove[i]])\n\n    let lisIdx = longestSeq.length - 1, tmpD\n    for(let i = newEnd; i >= newStart; i--) {\n        if(longestSeq[lisIdx] === i) {\n            afterNode = nodes[P[longestSeq[lisIdx]]]\n            noOp(afterNode, data[i])\n            lisIdx--\n        } else {\n            if (P[i] === -1) {\n                tmpD = createFn(data[i])\n            } else {\n                tmpD = nodes[P[i]]\n                noOp(tmpD, data[i])\n            }\n            parent.insertBefore(tmpD, afterNode)\n            afterNode = tmpD\n        }\n    }\n}\n\nexport default keyed\n\n// Picked from\n// https://github.com/adamhaile/surplus/blob/master/src/runtime/content.ts#L368\n\n// return an array of the indices of ns that comprise the longest increasing subsequence within ns\nfunction longestPositiveIncreasingSubsequence(ns, newStart) {\n    var seq = [],\n        is  = [],\n        l   = -1,\n        pre = new Array(ns.length);\n\n    for (var i = newStart, len = ns.length; i < len; i++) {\n        var n = ns[i];\n        if (n < 0) continue;\n        var j = findGreatestIndexLEQ(seq, n);\n        if (j !== -1) pre[i] = is[j];\n        if (j === l) {\n            l++;\n            seq[l] = n;\n            is[l]  = i;\n        } else if (n < seq[j + 1]) {\n            seq[j + 1] = n;\n            is[j + 1] = i;\n        }\n    }\n\n    for (i = is[l]; l >= 0; i = pre[i], l--) {\n        seq[l] = i;\n    }\n\n    return seq;\n}\n\nfunction findGreatestIndexLEQ(seq, n) {\n    // invariant: lo is guaranteed to be index of a value <= n, hi to be >\n    // therefore, they actually start out of range: (-1, last + 1)\n    var lo = -1,\n        hi = seq.length;\n    \n    // fast path for simple increasing sequences\n    if (hi > 0 && seq[hi - 1] <= n) return hi - 1;\n\n    while (hi - lo > 1) {\n        var mid = Math.floor((lo + hi) / 2);\n        if (seq[mid] > n) {\n            hi = mid;\n        } else {\n            lo = mid;\n        }\n    }\n\n    return lo;\n}\n","import {h,setupSyntheticEvent} from 'stage0'\nimport keyed from 'stage0/keyed'\n\nconst cellView = h`<td class=\"TableCell\">#text</td>`\nfunction TableCell(data) {\n    const root = cellView.cloneNode(true)\n    const refs = cellView.collect(root)\n\n    const {text} = refs\n\n    text.nodeValue = data\n\n    root.__click = () => console.log(\"Click\", data)\n\n    let a = data\n    root.update = function(data) {\n        if (data !== a) a = text.nodeValue = data\n    }\n\n    return root\n}\n\nconst rowView = h`<tr></tr>`\nfunction TableRow(item) {\n    const root = rowView.cloneNode(true)\n\n    root.className = item.active ? 'TableRow active' : 'TableRow'\n    root.dataset.id = item.id\n\n    const id = TableCell('#' + item.id)\n    root.appendChild(id)\n\n    let renderedProps = []\n    root.update = function(item) {\n        keyed(\n            'id',\n            root,\n            renderedProps,\n            item.props,\n            item => TableCell(item),\n            (node, item) => node.update(item),\n            id\n        )\n        renderedProps = item.props.slice()\n    }\n    root.update(item)\n\n    return root\n}\n\nconst tableView = h`<table class=\"Table\"><tbody #tbody></tbody></table>`\nfunction Table(data) {\n    const root = tableView.cloneNode(true)\n    const refs = tableView.collect(root)\n\n    const {tbody} = refs\n\n    let renderedItems = []\n    root.update = function(data) {\n        keyed(\n            'id',\n            tbody,\n            renderedItems,\n            data.table.items,\n            item => TableRow(item),\n            (node, item) => node.update(item)\n        )\n        renderedItems = data.table.items.slice()\n    }\n    root.update(data)\n\n    return root\n}\n\nconst boxView = h`<div class=\"AnimBox\"></div>`\nfunction AnimBox(item) {\n    const root = boxView.cloneNode(true)\n\n    root.dataset.id = item.id\n\n    const style = root.style\n\n    let b, b2\n    root.update = function(item) {\n        b2 = item.time\n\n        if (b2 !== b) {\n            style.background = \"rgba(0,0,0,\" + (0.5 + ((b2 % 10) / 10)) + \")\"\n            style.borderRadius = (b2 % 10) + \"px\"\n            b = b2\n        }\n    }\n    root.update(item)\n\n    return root\n}\n\nconst animView = h`<div class=\"Anim\"></div>`\nfunction Anim(data) {\n    const root = animView.cloneNode(true)\n\n    let renderedItems = []\n    root.update = function(data) {\n        keyed(\n            'id',\n            root,\n            renderedItems,\n            data.anim.items,\n            item => AnimBox(item),\n            (node, item) => node.update(item)\n        )\n        renderedItems = data.anim.items.slice()\n    }\n    root.update(data)\n\n    return root\n}\n\nconst leafView = h`<li class=\"TreeLeaf\">#id</li>`\nfunction TreeLeaf(node) {\n    const root = leafView.cloneNode(true)\n    const refs = leafView.collect(root)\n\n    const {id} = refs\n\n    id.nodeValue = node.id\n\n    return root\n}\n\nconst nodeView = h`<ul class=\"TreeNode\"></ul>`\nfunction TreeNode(node) {\n    const root = nodeView.cloneNode(true)\n\n    let renderedItems = []\n    root.update = function(node) {\n        keyed(\n            'id',\n            root,\n            renderedItems,\n            node.children,\n            node => node.container ? TreeNode(node) : TreeLeaf(node),\n            () => {}\n        )\n        renderedItems = node.children.slice()\n    }\n    root.update(node)\n\n    return root\n}\n\nconst treeView = h`<div class=\"Tree\"></div>`\nfunction Tree(data) {\n    const root = treeView.cloneNode(true)\n\n    const node = TreeNode(data.tree.root)\n    root.appendChild(node)\n\n    root.update = function(data) {\n        node.update(data.tree.root)\n    }\n\n    return root\n}\n\nconst mainView = h`<div class=\"Main\">#section</div>`\nfunction Main() {\n    const root = mainView\n    const refs = mainView.collect(root)\n\n    let {section} = refs\n\n    function route(location, data) {\n        if (location === 'table') {\n          return Table(data)\n        } else if (location === 'anim') {\n          return Anim(data)\n        } else if (location === 'tree') {\n          return Tree(data)\n        }\n    }\n\n    let a = '', a2,\n        newSection\n    root.update = function(data) {\n        a2 = data.location\n\n        if (a2 !== a) {\n            newSection = route(a2, data)\n            root.replaceChild(newSection, section)\n            section = newSection\n            a = a2\n        } else {\n            section.update(data)    \n        }\n    }\n\n    return root\n}\n\nuibench.init(\"stage0\", \"0.0.2\")\n\ndocument.addEventListener(\"DOMContentLoaded\", e => {\n  setupSyntheticEvent('click')\n\n  const container = document.querySelector(\"#App\")\n  const app = Main()\n  container.appendChild(app)\n\n  uibench.run(\n    state => app.update(state),\n    samples => console.debug({samples})\n  )\n})"],"names":["cellView","h","TableCell","data","root","cloneNode","refs","collect","text","nodeValue","__click","console","log","a","update","rowView","TableRow","item","className","active","dataset","id","appendChild","renderedProps","keyed","props","node","slice","tableView","Table","tbody","renderedItems","table","items","boxView","AnimBox","style","b","b2","time","background","borderRadius","animView","Anim","anim","leafView","TreeLeaf","nodeView","TreeNode","children","container","treeView","Tree","tree","mainView","Main","section","route","location","a2","newSection","replaceChild","uibench","init","document","addEventListener","e","setupSyntheticEvent","querySelector","app","run","state","samples","debug"],"mappings":"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"}